let userId = null;

// –ó–∞–ø—Ä–æ—Å Telegram ID
window.Telegram.WebApp.ready();
Telegram.WebApp.expand();

Telegram.WebApp.onEvent("mainButtonClicked", () => {
  navigateTo("home");
});

window.onload = () => {
  const tgUser = Telegram.WebApp.initDataUnsafe?.user;
  if (tgUser && tgUser.id) {
    userId = tgUser.id;
    document.querySelector("#user-nick").innerText = @${tgUser.username || "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"};
    loadProfile();
    loadTasks();
  }
};

// --- –ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏ ---
function navigateTo(page) {
  document.querySelectorAll(".page").forEach(p => p.style.display = "none");
  document.getElementById(page).style.display = "block";
}

// --- –ù–∞–∑–∞–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é ---
document.querySelectorAll(".back").forEach(btn => {
  btn.addEventListener("click", () => navigateTo("home"));
});

// --- –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è ---
document.getElementById("submitTask").onclick = () => {
  const data = {
    subject: document.getElementById("subject").value,
    description: document.getElementById("description").value,
    price: document.getElementById("price").value,
    deadline: document.getElementById("deadline").value
  };
  Telegram.WebApp.sendData(JSON.stringify(data));
  Telegram.WebApp.close();
};

// --- –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–¥–∞–Ω–∏–π ---
async function loadTasks() {
  const response = await fetch("https://api.airtable.com/v0/appTpq4tdeQ27uxQ9/Tasks", {
    headers: {
      Authorization: "Bearer patZ7hX8W8F8apmJm.9adf2ed71f8925dd372af08a5b5af2af4b12ead4abc0036be4ea68c43c47a8c4"
    }
  });

  const data = await response.json();
  const container = document.getElementById("taskList");
  container.innerHTML = "";

  data.records
    .filter(t => t.fields["–°—Ç–∞—Ç—É—Å"] === "–ù–æ–≤–∞—è")
    .forEach(task => {
      const el = document.createElement("div");
      el.className = "task";
      el.innerHTML = `
        <b>${task.fields["–ü—Ä–µ–¥–º–µ—Ç"]}</b><br>
        üí¨ ${task.fields["–û–ø–∏—Å–∞–Ω–∏–µ"]}<br>
        üí∞ ${task.fields["–¶–µ–Ω–∞"]}‚ÇΩ | ‚è∞ ${task.fields["–î–µ–¥–ª–∞–π–Ω"]}<br>
        <button onclick="takeTask('${task.id}')">–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É</button>
      `;
      container.appendChild(el);
    });
}

async function takeTask(taskId) {
  await fetch(`https://api.airtable.com/v0/appTpq4tdeQ27uxQ9/Tasks/${taskId}`, {
    method: "PATCH",
    headers: {
      Authorization: "Bearer patZ7hX8W8F8apmJm.9adf2ed71f8925dd372af08a5b5af2af4b12ead4abc0036be4ea68c43c47a8c4",
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      fields: {
        "–°—Ç–∞—Ç—É—Å": "–í —Ä–∞–±–æ—Ç–µ",
        "ID –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è": String(userId)
      }
    })
  });

  alert("‚úÖ –ó–∞–¥–∞–Ω–∏–µ –≤–∑—è—Ç–æ –≤ —Ä–∞–±–æ—Ç—É!");
  loadTasks();
}

// --- –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç ---
async function loadProfile() {
  const response = await fetch(`https://api.airtable.com/v0/appTpq4tdeQ27uxQ9/Tasks?filterByFormula={ID –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è}='${userId}'`, {
    headers: {
      Authorization: "Bearer patZ7hX8W8F8apmJm.9adf2ed71f8925dd372af08a5b5af2af4b12ead4abc0036be4ea68c43c47a8c4"
    }
  });

  const data = await response.json();
  const done = data.records.filter(t => t.fields["–°—Ç–∞—Ç—É—Å"] === "–ó–∞–≤–µ—Ä—à–µ–Ω–∞");
  const reviews = done.map(t => t.fields["–û—Ç–∑—ã–≤"]).filter(Boolean);

  document.getElementById("completed-count").innerText = done.length;
  document.getElementById("reviews").innerHTML = reviews.length > 0
    ? reviews.map(r => `<div class="review">üí¨ ${r}</div>`).join("")
    : "–û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.";
}
